
% Enter the names of your group members below.
% If you only have 2 group members, leave the last space blank
%
%%%%%
%%%%% NAME: Nathan Ngo
%%%%% NAME: Kevin Shao
%%%%% NAME:
%

%%%%% SECTION: cpu_details
%%%%% Describe the system you ran your tests on below.
%%%%% It should include information about the processor (mainly speed), 
%%%%% amount of RAM, and operator system you ran your tests on.

Chip: Apple M2
Memory: 16 GB
OS: macOS

%%%%% SECTION: summary
%%%%% Summarize your results in 5-10 sentences. Describe which states you tested on, 
%%%%% which ones ran in a reasonable amount of time (and how long they took), and 
%%%%% how much speedup you saw when using declarative heuristics. Report any other 
%%%%% interesting behaviour you saw.

We tested on all goal states applicable. For the more simple goal states 11-12, there was
no difference between using declaratives heuristics or not, both finished with an elapsed
time of 0.0 seconds. When moving on to medium difficulty goal states, we then saw a 
difference with how much declarative heuristics spedup the processing time. For example,
goal state 13 with init1, regular had an elasped time of 0.02s, while heuristic had 0.01s.
That already is a 50% decrease in computing time. Getting to the more complicated goal 
states, goal states 21 with init2, regular had an elapsed time of 29.80s while heuristic
had 20.08s, that is 9s faster. There were even some states that we could not run in a 
reasonable time without using declarative heuristics, for example, goal state 16 with 
init1, with declarative heuristics it took 126.00s, without it could not run within a 
reasonable amount of time so we could not get the results. So it is clear that using 
declarative heuristics significantly improved computing time.

%%%%% SECTION: log
%%%%% Show the actual queries you ran below, along with the output
%%%%% This should include runtime and the actual plan found

--------- heuristic ---------
(robocupInit1)
?- solve_problem(heuristic, 11, 11, Plan).
Plan = [move(r1, 0, 0, 0, 1), move(r1, 1, 0, 0, 0)]
Yes (0.00s cpu, solution 1, maybe more)
Elapsed time (sec): 0.0

?- solve_problem(heuristic, 12, 11, Plan).
Plan = [pass(r1, r2), move(r1, 1, 0, 0, 0)]
Yes (0.00s cpu, solution 1, maybe more)
Elapsed time (sec): 0.0

?- solve_problem(heuristic, 13, 11, Plan).
Plan = [pass(r2, r3), pass(r1, r2), move(r3, 3, 1, 3, 2), move(r1, 1, 0, 0, 0)]
Yes (0.01s cpu, solution 1, maybe more)
Elapsed time (sec): 0.0100000000002183

?- solve_problem(heuristic, 14, 11, Plan).
Plan = [shoot(r3), move(r3, 3, 2, 3, 1), pass(r2, r3), pass(r1, r2), move(r3, 3, 1, 3, 2), move(r1, 1, 0, 0, 0)]
Yes (0.09s cpu, solution 1, maybe more)
Elapsed time (sec): 0.0900000000001455

?- solve_problem(heuristic, 15, 11, Plan).
Plan = [move(r1, 1, 2, 2, 2), move(r2, 2, 2, 3, 2), move(r1, 0, 2, 1, 2), move(r2, 1, 2, 2, 2), move(r1, 0, 1, 0, 2), move(r2, 0, 2, 1, 2), move(r1, 0, 0, 0, 1), move(r1, 1, 0, 0, 0)]
Yes (0.96s cpu, solution 1, maybe more)
Elapsed time (sec): 0.960000000000036

?- solve_problem(heuristic, 16, 11, Plan).
Plan = [move(r1, 2, 2, 3, 2), move(r2, 3, 2, 3, 1), move(r3, 3, 1, 3, 0), move(r1, 1, 2, 2, 2), move(r2, 2, 2, 3, 2), move(r1, 0, 2, 1, 2), move(r2, 1, 2, 2, 2), move(r1, 0, 1, 0, 2), move(r2, 0, 2, 1, 2), move(r1, 0, 0, 0, 1), move(r1, 1, 0, 0, 0)]
Yes (126.00s cpu, solution 1, maybe more)
Elapsed time (sec): 125.99

?- solve_problem(heuristic, 21, 11, Plan).
Plan = [shoot(r3), move(r3, 3, 2, 3, 1), pass(r2, r3), pass(r1, r2), move(r3, 3, 1, 3, 2), move(r1, 1, 0, 0, 0)]
Yes (0.09s cpu, solution 1, maybe more)
Elapsed time (sec): 0.0900000000001455

(robocupInit2)

?- solve_problem(heuristic, 21, 11, Plan).
Plan = [shoot(r5), pass(r3, r5), move(r3, 2, 4, 3, 4), move(r3, 1, 4, 2, 4), move(r3, 0, 4, 1, 4), pass(r1, r3)]
Yes (20.08s cpu, solution 1, maybe more)
Elapsed time (sec): 20.0799999999999

--------- regular ---------
(robocupInit1)
?- solve_problem(regular, 11, 11, Plan).
Plan = [move(r1, 0, 0, 0, 1), move(r1, 1, 0, 0, 0)]
Yes (0.00s cpu, solution 1, maybe more)
Elapsed time (sec): 0.0

?- solve_problem(regular, 12, 11, Plan).
Plan = [pass(r1, r2), move(r1, 1, 0, 0, 0)]
Yes (0.00s cpu, solution 1, maybe more)
Elapsed time (sec): 0.0

?- solve_problem(regular, 13, 11, Plan).
Plan = [pass(r2, r3), pass(r1, r2), move(r3, 3, 1, 3, 2), move(r1, 1, 0, 0, 0)]
Yes (0.02s cpu, solution 1, maybe more)
Elapsed time (sec): 0.0200000000004366

?- solve_problem(regular, 14, 11, Plan).
Plan = [shoot(r3), move(r3, 3, 2, 3, 1), pass(r2, r3), pass(r1, r2), move(r3, 3, 1, 3, 2), move(r1, 1, 0, 0, 0)]
Yes (0.17s cpu, solution 1, maybe more)
Elapsed time (sec): 0.170000000000073

?- solve_problem(regular, 15, 11, Plan).
Plan = [move(r1, 1, 2, 2, 2), move(r2, 2, 2, 3, 2), move(r1, 0, 2, 1, 2), move(r2, 1, 2, 2, 2), move(r1, 0, 1, 0, 2), move(r2, 0, 2, 1, 2), move(r1, 0, 0, 0, 1), move(r1, 1, 0, 0, 0)]
Yes (3.03s cpu, solution 1, maybe more)
Elapsed time (sec): 3.02999999999975

?- solve_problem(regular, 16, 11, Plan).
(only solvable in a reasonable time with declarative heuristics.)

?- solve_problem(regular, 21, 11, Plan).
Plan = [shoot(r3), move(r3, 3, 2, 3, 1), pass(r2, r3), pass(r1, r2), move(r3, 3, 1, 3, 2), move(r1, 1, 0, 0, 0)]
Yes (0.18s cpu, solution 1, maybe more)
Elapsed time (sec): 0.180000000000291

(robocupInit2)

?- solve_problem(regular, 21, 11, Plan).
Plan = [shoot(r5), pass(r3, r5), move(r3, 2, 4, 3, 4), move(r3, 1, 4, 2, 4), move(r3, 0, 4, 1, 4), pass(r1, r3)]
Yes (29.80s cpu, solution 1, maybe more)
Elapsed time (sec): 29.8000000000002